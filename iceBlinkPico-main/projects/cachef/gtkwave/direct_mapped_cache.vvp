#! /opt/local/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/opt/local/lib/ivl/system.vpi";
:vpi_module "/opt/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/opt/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/opt/local/lib/ivl/v2005_math.vpi";
:vpi_module "/opt/local/lib/ivl/va_math.vpi";
:vpi_module "/opt/local/lib/ivl/v2009.vpi";
S_0x126e0f5a0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x126e0f710 .scope module, "direct_mapped_cache_tb" "direct_mapped_cache_tb" 3 3;
 .timescale 0 0;
P_0x126e07200 .param/l "ASSOC" 0 3 7, +C4<00000000000000000000000000000001>;
P_0x126e07240 .param/l "BLOCK_OFFSET_WIDTH" 1 3 11, +C4<00000000000000000000000000000101>;
P_0x126e07280 .param/l "BLOCK_SIZE" 0 3 6, +C4<00000000000000000000000000100000>;
P_0x126e072c0 .param/l "CACHE_SIZE" 0 3 5, +C4<00000000000000000000000010000000>;
P_0x126e07300 .param/l "INDEX_WIDTH" 1 3 12, +C4<00000000000000000000000000000010>;
P_0x126e07340 .param/l "NUM_SETS" 1 3 10, +C4<0000000000000000000000000000000000000000000000000000000000000100>;
P_0x126e07380 .param/l "PERIOD" 1 3 9, +C4<00000000000000000000000000001010>;
P_0x126e073c0 .param/l "TAG_WIDTH" 1 3 13, +C4<0000000000000000000000000000011001>;
v0x126e4fc10_0 .var "addr", 31 0;
v0x126e4fcc0_0 .var "clk", 0 0;
v0x126e4fd70_0 .net "hit", 0 0, v0x126e4eee0_0;  1 drivers
v0x126e4fe40_0 .net "miss", 0 0, v0x126e4f090_0;  1 drivers
v0x126e4fef0_0 .net "rd_data", 7 0, v0x126e4f130_0;  1 drivers
v0x126e4ffc0_0 .var/i "read_hits", 31 0;
v0x126e50050_0 .var/i "read_misses", 31 0;
v0x126e500e0_0 .var "reset", 0 0;
v0x126e50190_0 .var/i "test_read_hits", 31 0;
v0x126e502a0_0 .var/i "test_read_misses", 31 0;
v0x126e50340_0 .var/i "test_write_hits", 31 0;
v0x126e503f0_0 .var/i "test_write_misses", 31 0;
v0x126e504a0_0 .var/i "total_accesses", 31 0;
v0x126e50550_0 .var "wr_data", 7 0;
v0x126e50610_0 .var "wr_en", 0 0;
v0x126e506a0_0 .var/i "write_hits", 31 0;
v0x126e50730_0 .var/i "write_misses", 31 0;
S_0x126e3e6f0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 165, 3 165 0, S_0x126e0f710;
 .timescale 0 0;
v0x126e10340_0 .var/2s "i", 31 0;
S_0x126e4c4f0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 171, 3 171 0, S_0x126e0f710;
 .timescale 0 0;
v0x126e4c6c0_0 .var/2s "i", 31 0;
S_0x126e4c750 .scope begin, "$ivl_for_loop3" "$ivl_for_loop3" 3 177, 3 177 0, S_0x126e0f710;
 .timescale 0 0;
v0x126e4c930_0 .var/2s "i", 31 0;
S_0x126e4c9e0 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 3 183, 3 183 0, S_0x126e0f710;
 .timescale 0 0;
v0x126e4cba0_0 .var/2s "i", 31 0;
S_0x126e4cc60 .scope begin, "$ivl_for_loop5" "$ivl_for_loop5" 3 189, 3 189 0, S_0x126e0f710;
 .timescale 0 0;
v0x126e4ce60_0 .var/2s "i", 31 0;
S_0x126e4cf20 .scope begin, "$ivl_for_loop6" "$ivl_for_loop6" 3 195, 3 195 0, S_0x126e0f710;
 .timescale 0 0;
v0x126e4d0e0_0 .var/2s "i", 31 0;
S_0x126e4d1a0 .scope begin, "$ivl_for_loop7" "$ivl_for_loop7" 3 198, 3 198 0, S_0x126e0f710;
 .timescale 0 0;
v0x126e4d360_0 .var/2s "i", 31 0;
S_0x126e4d420 .scope task, "display_test_results" "display_test_results" 3 109, 3 109 0, S_0x126e0f710;
 .timescale 0 0;
TD_direct_mapped_cache_tb.display_test_results ;
    %vpi_call/w 3 110 "$display", "Test Results: Read Hits: %0d, Read Misses: %0d, Write Hits: %0d, Write Misses: %0d", v0x126e50190_0, v0x126e502a0_0, v0x126e50340_0, v0x126e503f0_0 {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e50190_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e502a0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e50340_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e503f0_0, 0, 32;
    %end;
S_0x126e4d5e0 .scope module, "dut" "direct_mapped_cache" 3 41, 4 3 0, S_0x126e0f710;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "reset";
    .port_info 2 /INPUT 32 "addr";
    .port_info 3 /INPUT 8 "wr_data";
    .port_info 4 /INPUT 1 "wr_en";
    .port_info 5 /OUTPUT 8 "rd_data";
    .port_info 6 /OUTPUT 1 "hit";
    .port_info 7 /OUTPUT 1 "miss";
P_0x126e4d820 .param/l "ASSOC" 0 4 6, +C4<00000000000000000000000000000001>;
P_0x126e4d860 .param/l "BLOCK_OFFSET_WIDTH" 1 4 19, +C4<00000000000000000000000000000101>;
P_0x126e4d8a0 .param/l "BLOCK_SIZE" 0 4 5, +C4<00000000000000000000000000100000>;
P_0x126e4d8e0 .param/l "CACHE_SIZE" 0 4 4, +C4<00000000000000000000000010000000>;
P_0x126e4d920 .param/l "INDEX_WIDTH" 1 4 20, +C4<00000000000000000000000000000010>;
P_0x126e4d960 .param/l "NUM_SETS" 1 4 18, +C4<0000000000000000000000000000000000000000000000000000000000000100>;
P_0x126e4d9a0 .param/l "TAG_WIDTH" 1 4 21, +C4<0000000000000000000000000000011001>;
v0x126e4e0f0_0 .net "addr", 31 0, v0x126e4fc10_0;  1 drivers
v0x126e4e1b0_0 .var "block_offset", 4 0;
v0x126e4e260 .array "cache_data", 127 0, 7 0;
v0x126e4eb10 .array "cache_tag", 0 3, 24 0;
v0x126e4ec10_0 .net "clk", 0 0, v0x126e4fcc0_0;  1 drivers
v0x126e4ecf0_0 .var "current_hit", 0 0;
v0x126e4ed90_0 .var "current_miss", 0 0;
v0x126e4ee30_0 .var "current_rd_data", 7 0;
v0x126e4eee0_0 .var "hit", 0 0;
v0x126e4eff0_0 .var "index", 1 0;
v0x126e4f090_0 .var "miss", 0 0;
v0x126e4f130_0 .var "rd_data", 7 0;
v0x126e4f1e0_0 .net "reset", 0 0, v0x126e500e0_0;  1 drivers
v0x126e4f280_0 .var "tag", 24 0;
v0x126e4f330 .array "valid", 0 3, 0 0;
v0x126e4f420_0 .net "wr_data", 7 0, v0x126e50550_0;  1 drivers
v0x126e4f4d0_0 .net "wr_en", 0 0, v0x126e50610_0;  1 drivers
E_0x126e4da20 .event posedge, v0x126e4f1e0_0, v0x126e4ec10_0;
v0x126e4f330_0 .array/port v0x126e4f330, 0;
v0x126e4f330_1 .array/port v0x126e4f330, 1;
v0x126e4f330_2 .array/port v0x126e4f330, 2;
E_0x126e4de40/0 .event anyedge, v0x126e4eff0_0, v0x126e4f330_0, v0x126e4f330_1, v0x126e4f330_2;
v0x126e4f330_3 .array/port v0x126e4f330, 3;
v0x126e4eb10_0 .array/port v0x126e4eb10, 0;
v0x126e4eb10_1 .array/port v0x126e4eb10, 1;
v0x126e4eb10_2 .array/port v0x126e4eb10, 2;
E_0x126e4de40/1 .event anyedge, v0x126e4f330_3, v0x126e4eb10_0, v0x126e4eb10_1, v0x126e4eb10_2;
v0x126e4eb10_3 .array/port v0x126e4eb10, 3;
E_0x126e4de40/2 .event anyedge, v0x126e4eb10_3, v0x126e4f280_0, v0x126e4f4d0_0, v0x126e4e1b0_0;
v0x126e4e260_0 .array/port v0x126e4e260, 0;
v0x126e4e260_1 .array/port v0x126e4e260, 1;
v0x126e4e260_2 .array/port v0x126e4e260, 2;
v0x126e4e260_3 .array/port v0x126e4e260, 3;
E_0x126e4de40/3 .event anyedge, v0x126e4e260_0, v0x126e4e260_1, v0x126e4e260_2, v0x126e4e260_3;
v0x126e4e260_4 .array/port v0x126e4e260, 4;
v0x126e4e260_5 .array/port v0x126e4e260, 5;
v0x126e4e260_6 .array/port v0x126e4e260, 6;
v0x126e4e260_7 .array/port v0x126e4e260, 7;
E_0x126e4de40/4 .event anyedge, v0x126e4e260_4, v0x126e4e260_5, v0x126e4e260_6, v0x126e4e260_7;
v0x126e4e260_8 .array/port v0x126e4e260, 8;
v0x126e4e260_9 .array/port v0x126e4e260, 9;
v0x126e4e260_10 .array/port v0x126e4e260, 10;
v0x126e4e260_11 .array/port v0x126e4e260, 11;
E_0x126e4de40/5 .event anyedge, v0x126e4e260_8, v0x126e4e260_9, v0x126e4e260_10, v0x126e4e260_11;
v0x126e4e260_12 .array/port v0x126e4e260, 12;
v0x126e4e260_13 .array/port v0x126e4e260, 13;
v0x126e4e260_14 .array/port v0x126e4e260, 14;
v0x126e4e260_15 .array/port v0x126e4e260, 15;
E_0x126e4de40/6 .event anyedge, v0x126e4e260_12, v0x126e4e260_13, v0x126e4e260_14, v0x126e4e260_15;
v0x126e4e260_16 .array/port v0x126e4e260, 16;
v0x126e4e260_17 .array/port v0x126e4e260, 17;
v0x126e4e260_18 .array/port v0x126e4e260, 18;
v0x126e4e260_19 .array/port v0x126e4e260, 19;
E_0x126e4de40/7 .event anyedge, v0x126e4e260_16, v0x126e4e260_17, v0x126e4e260_18, v0x126e4e260_19;
v0x126e4e260_20 .array/port v0x126e4e260, 20;
v0x126e4e260_21 .array/port v0x126e4e260, 21;
v0x126e4e260_22 .array/port v0x126e4e260, 22;
v0x126e4e260_23 .array/port v0x126e4e260, 23;
E_0x126e4de40/8 .event anyedge, v0x126e4e260_20, v0x126e4e260_21, v0x126e4e260_22, v0x126e4e260_23;
v0x126e4e260_24 .array/port v0x126e4e260, 24;
v0x126e4e260_25 .array/port v0x126e4e260, 25;
v0x126e4e260_26 .array/port v0x126e4e260, 26;
v0x126e4e260_27 .array/port v0x126e4e260, 27;
E_0x126e4de40/9 .event anyedge, v0x126e4e260_24, v0x126e4e260_25, v0x126e4e260_26, v0x126e4e260_27;
v0x126e4e260_28 .array/port v0x126e4e260, 28;
v0x126e4e260_29 .array/port v0x126e4e260, 29;
v0x126e4e260_30 .array/port v0x126e4e260, 30;
v0x126e4e260_31 .array/port v0x126e4e260, 31;
E_0x126e4de40/10 .event anyedge, v0x126e4e260_28, v0x126e4e260_29, v0x126e4e260_30, v0x126e4e260_31;
v0x126e4e260_32 .array/port v0x126e4e260, 32;
v0x126e4e260_33 .array/port v0x126e4e260, 33;
v0x126e4e260_34 .array/port v0x126e4e260, 34;
v0x126e4e260_35 .array/port v0x126e4e260, 35;
E_0x126e4de40/11 .event anyedge, v0x126e4e260_32, v0x126e4e260_33, v0x126e4e260_34, v0x126e4e260_35;
v0x126e4e260_36 .array/port v0x126e4e260, 36;
v0x126e4e260_37 .array/port v0x126e4e260, 37;
v0x126e4e260_38 .array/port v0x126e4e260, 38;
v0x126e4e260_39 .array/port v0x126e4e260, 39;
E_0x126e4de40/12 .event anyedge, v0x126e4e260_36, v0x126e4e260_37, v0x126e4e260_38, v0x126e4e260_39;
v0x126e4e260_40 .array/port v0x126e4e260, 40;
v0x126e4e260_41 .array/port v0x126e4e260, 41;
v0x126e4e260_42 .array/port v0x126e4e260, 42;
v0x126e4e260_43 .array/port v0x126e4e260, 43;
E_0x126e4de40/13 .event anyedge, v0x126e4e260_40, v0x126e4e260_41, v0x126e4e260_42, v0x126e4e260_43;
v0x126e4e260_44 .array/port v0x126e4e260, 44;
v0x126e4e260_45 .array/port v0x126e4e260, 45;
v0x126e4e260_46 .array/port v0x126e4e260, 46;
v0x126e4e260_47 .array/port v0x126e4e260, 47;
E_0x126e4de40/14 .event anyedge, v0x126e4e260_44, v0x126e4e260_45, v0x126e4e260_46, v0x126e4e260_47;
v0x126e4e260_48 .array/port v0x126e4e260, 48;
v0x126e4e260_49 .array/port v0x126e4e260, 49;
v0x126e4e260_50 .array/port v0x126e4e260, 50;
v0x126e4e260_51 .array/port v0x126e4e260, 51;
E_0x126e4de40/15 .event anyedge, v0x126e4e260_48, v0x126e4e260_49, v0x126e4e260_50, v0x126e4e260_51;
v0x126e4e260_52 .array/port v0x126e4e260, 52;
v0x126e4e260_53 .array/port v0x126e4e260, 53;
v0x126e4e260_54 .array/port v0x126e4e260, 54;
v0x126e4e260_55 .array/port v0x126e4e260, 55;
E_0x126e4de40/16 .event anyedge, v0x126e4e260_52, v0x126e4e260_53, v0x126e4e260_54, v0x126e4e260_55;
v0x126e4e260_56 .array/port v0x126e4e260, 56;
v0x126e4e260_57 .array/port v0x126e4e260, 57;
v0x126e4e260_58 .array/port v0x126e4e260, 58;
v0x126e4e260_59 .array/port v0x126e4e260, 59;
E_0x126e4de40/17 .event anyedge, v0x126e4e260_56, v0x126e4e260_57, v0x126e4e260_58, v0x126e4e260_59;
v0x126e4e260_60 .array/port v0x126e4e260, 60;
v0x126e4e260_61 .array/port v0x126e4e260, 61;
v0x126e4e260_62 .array/port v0x126e4e260, 62;
v0x126e4e260_63 .array/port v0x126e4e260, 63;
E_0x126e4de40/18 .event anyedge, v0x126e4e260_60, v0x126e4e260_61, v0x126e4e260_62, v0x126e4e260_63;
v0x126e4e260_64 .array/port v0x126e4e260, 64;
v0x126e4e260_65 .array/port v0x126e4e260, 65;
v0x126e4e260_66 .array/port v0x126e4e260, 66;
v0x126e4e260_67 .array/port v0x126e4e260, 67;
E_0x126e4de40/19 .event anyedge, v0x126e4e260_64, v0x126e4e260_65, v0x126e4e260_66, v0x126e4e260_67;
v0x126e4e260_68 .array/port v0x126e4e260, 68;
v0x126e4e260_69 .array/port v0x126e4e260, 69;
v0x126e4e260_70 .array/port v0x126e4e260, 70;
v0x126e4e260_71 .array/port v0x126e4e260, 71;
E_0x126e4de40/20 .event anyedge, v0x126e4e260_68, v0x126e4e260_69, v0x126e4e260_70, v0x126e4e260_71;
v0x126e4e260_72 .array/port v0x126e4e260, 72;
v0x126e4e260_73 .array/port v0x126e4e260, 73;
v0x126e4e260_74 .array/port v0x126e4e260, 74;
v0x126e4e260_75 .array/port v0x126e4e260, 75;
E_0x126e4de40/21 .event anyedge, v0x126e4e260_72, v0x126e4e260_73, v0x126e4e260_74, v0x126e4e260_75;
v0x126e4e260_76 .array/port v0x126e4e260, 76;
v0x126e4e260_77 .array/port v0x126e4e260, 77;
v0x126e4e260_78 .array/port v0x126e4e260, 78;
v0x126e4e260_79 .array/port v0x126e4e260, 79;
E_0x126e4de40/22 .event anyedge, v0x126e4e260_76, v0x126e4e260_77, v0x126e4e260_78, v0x126e4e260_79;
v0x126e4e260_80 .array/port v0x126e4e260, 80;
v0x126e4e260_81 .array/port v0x126e4e260, 81;
v0x126e4e260_82 .array/port v0x126e4e260, 82;
v0x126e4e260_83 .array/port v0x126e4e260, 83;
E_0x126e4de40/23 .event anyedge, v0x126e4e260_80, v0x126e4e260_81, v0x126e4e260_82, v0x126e4e260_83;
v0x126e4e260_84 .array/port v0x126e4e260, 84;
v0x126e4e260_85 .array/port v0x126e4e260, 85;
v0x126e4e260_86 .array/port v0x126e4e260, 86;
v0x126e4e260_87 .array/port v0x126e4e260, 87;
E_0x126e4de40/24 .event anyedge, v0x126e4e260_84, v0x126e4e260_85, v0x126e4e260_86, v0x126e4e260_87;
v0x126e4e260_88 .array/port v0x126e4e260, 88;
v0x126e4e260_89 .array/port v0x126e4e260, 89;
v0x126e4e260_90 .array/port v0x126e4e260, 90;
v0x126e4e260_91 .array/port v0x126e4e260, 91;
E_0x126e4de40/25 .event anyedge, v0x126e4e260_88, v0x126e4e260_89, v0x126e4e260_90, v0x126e4e260_91;
v0x126e4e260_92 .array/port v0x126e4e260, 92;
v0x126e4e260_93 .array/port v0x126e4e260, 93;
v0x126e4e260_94 .array/port v0x126e4e260, 94;
v0x126e4e260_95 .array/port v0x126e4e260, 95;
E_0x126e4de40/26 .event anyedge, v0x126e4e260_92, v0x126e4e260_93, v0x126e4e260_94, v0x126e4e260_95;
v0x126e4e260_96 .array/port v0x126e4e260, 96;
v0x126e4e260_97 .array/port v0x126e4e260, 97;
v0x126e4e260_98 .array/port v0x126e4e260, 98;
v0x126e4e260_99 .array/port v0x126e4e260, 99;
E_0x126e4de40/27 .event anyedge, v0x126e4e260_96, v0x126e4e260_97, v0x126e4e260_98, v0x126e4e260_99;
v0x126e4e260_100 .array/port v0x126e4e260, 100;
v0x126e4e260_101 .array/port v0x126e4e260, 101;
v0x126e4e260_102 .array/port v0x126e4e260, 102;
v0x126e4e260_103 .array/port v0x126e4e260, 103;
E_0x126e4de40/28 .event anyedge, v0x126e4e260_100, v0x126e4e260_101, v0x126e4e260_102, v0x126e4e260_103;
v0x126e4e260_104 .array/port v0x126e4e260, 104;
v0x126e4e260_105 .array/port v0x126e4e260, 105;
v0x126e4e260_106 .array/port v0x126e4e260, 106;
v0x126e4e260_107 .array/port v0x126e4e260, 107;
E_0x126e4de40/29 .event anyedge, v0x126e4e260_104, v0x126e4e260_105, v0x126e4e260_106, v0x126e4e260_107;
v0x126e4e260_108 .array/port v0x126e4e260, 108;
v0x126e4e260_109 .array/port v0x126e4e260, 109;
v0x126e4e260_110 .array/port v0x126e4e260, 110;
v0x126e4e260_111 .array/port v0x126e4e260, 111;
E_0x126e4de40/30 .event anyedge, v0x126e4e260_108, v0x126e4e260_109, v0x126e4e260_110, v0x126e4e260_111;
v0x126e4e260_112 .array/port v0x126e4e260, 112;
v0x126e4e260_113 .array/port v0x126e4e260, 113;
v0x126e4e260_114 .array/port v0x126e4e260, 114;
v0x126e4e260_115 .array/port v0x126e4e260, 115;
E_0x126e4de40/31 .event anyedge, v0x126e4e260_112, v0x126e4e260_113, v0x126e4e260_114, v0x126e4e260_115;
v0x126e4e260_116 .array/port v0x126e4e260, 116;
v0x126e4e260_117 .array/port v0x126e4e260, 117;
v0x126e4e260_118 .array/port v0x126e4e260, 118;
v0x126e4e260_119 .array/port v0x126e4e260, 119;
E_0x126e4de40/32 .event anyedge, v0x126e4e260_116, v0x126e4e260_117, v0x126e4e260_118, v0x126e4e260_119;
v0x126e4e260_120 .array/port v0x126e4e260, 120;
v0x126e4e260_121 .array/port v0x126e4e260, 121;
v0x126e4e260_122 .array/port v0x126e4e260, 122;
v0x126e4e260_123 .array/port v0x126e4e260, 123;
E_0x126e4de40/33 .event anyedge, v0x126e4e260_120, v0x126e4e260_121, v0x126e4e260_122, v0x126e4e260_123;
v0x126e4e260_124 .array/port v0x126e4e260, 124;
v0x126e4e260_125 .array/port v0x126e4e260, 125;
v0x126e4e260_126 .array/port v0x126e4e260, 126;
v0x126e4e260_127 .array/port v0x126e4e260, 127;
E_0x126e4de40/34 .event anyedge, v0x126e4e260_124, v0x126e4e260_125, v0x126e4e260_126, v0x126e4e260_127;
E_0x126e4de40 .event/or E_0x126e4de40/0, E_0x126e4de40/1, E_0x126e4de40/2, E_0x126e4de40/3, E_0x126e4de40/4, E_0x126e4de40/5, E_0x126e4de40/6, E_0x126e4de40/7, E_0x126e4de40/8, E_0x126e4de40/9, E_0x126e4de40/10, E_0x126e4de40/11, E_0x126e4de40/12, E_0x126e4de40/13, E_0x126e4de40/14, E_0x126e4de40/15, E_0x126e4de40/16, E_0x126e4de40/17, E_0x126e4de40/18, E_0x126e4de40/19, E_0x126e4de40/20, E_0x126e4de40/21, E_0x126e4de40/22, E_0x126e4de40/23, E_0x126e4de40/24, E_0x126e4de40/25, E_0x126e4de40/26, E_0x126e4de40/27, E_0x126e4de40/28, E_0x126e4de40/29, E_0x126e4de40/30, E_0x126e4de40/31, E_0x126e4de40/32, E_0x126e4de40/33, E_0x126e4de40/34;
E_0x126e4de80 .event anyedge, v0x126e4e0f0_0, v0x126e4e0f0_0, v0x126e4e0f0_0;
S_0x126e4dee0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 53, 4 53 0, S_0x126e4d5e0;
 .timescale 0 0;
v0x126e4e050_0 .var/2s "i", 31 0;
S_0x126e4f6f0 .scope task, "read_access" "read_access" 3 72, 3 72 0, S_0x126e0f710;
 .timescale 0 0;
v0x126e4f860_0 .var "read_addr", 31 0;
TD_direct_mapped_cache_tb.read_access ;
    %load/vec4 v0x126e4f860_0;
    %store/vec4 v0x126e4fc10_0, 0, 32;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x126e50610_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e504a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x126e504a0_0, 0, 32;
    %delay 10, 0;
    %load/vec4 v0x126e4fd70_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e50190_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x126e50190_0, 0, 32;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e4ffc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x126e4ffc0_0, 0, 32;
    %jmp T_1.1;
T_1.0 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e502a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x126e502a0_0, 0, 32;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e50050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x126e50050_0, 0, 32;
T_1.1 ;
    %delay 10, 0;
    %end;
S_0x126e4f8f0 .scope task, "write_access" "write_access" 3 90, 3 90 0, S_0x126e0f710;
 .timescale 0 0;
v0x126e4fab0_0 .var "data_to_write", 7 0;
v0x126e4fb70_0 .var "write_addr", 31 0;
TD_direct_mapped_cache_tb.write_access ;
    %load/vec4 v0x126e4fb70_0;
    %store/vec4 v0x126e4fc10_0, 0, 32;
    %load/vec4 v0x126e4fab0_0;
    %store/vec4 v0x126e50550_0, 0, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x126e50610_0, 0, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e504a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x126e504a0_0, 0, 32;
    %delay 10, 0;
    %load/vec4 v0x126e4fe40_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.2, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e503f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x126e503f0_0, 0, 32;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e50730_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x126e50730_0, 0, 32;
    %jmp T_2.3;
T_2.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e50340_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x126e50340_0, 0, 32;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e506a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x126e506a0_0, 0, 32;
T_2.3 ;
    %delay 10, 0;
    %end;
    .scope S_0x126e4d5e0;
T_3 ;
Ewait_0 .event/or E_0x126e4de80, E_0x0;
    %wait Ewait_0;
    %load/vec4 v0x126e4e0f0_0;
    %parti/s 25, 7, 4;
    %store/vec4 v0x126e4f280_0, 0, 25;
    %load/vec4 v0x126e4e0f0_0;
    %parti/s 2, 5, 4;
    %store/vec4 v0x126e4eff0_0, 0, 2;
    %load/vec4 v0x126e4e0f0_0;
    %parti/s 5, 0, 2;
    %store/vec4 v0x126e4e1b0_0, 0, 5;
    %jmp T_3;
    .thread T_3, $push;
    .scope S_0x126e4d5e0;
T_4 ;
Ewait_1 .event/or E_0x126e4de40, E_0x0;
    %wait Ewait_1;
    %load/vec4 v0x126e4eff0_0;
    %pad/u 4;
    %ix/vec4 4;
    %load/vec4a v0x126e4f330, 4;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_4.0, 8;
    %load/vec4 v0x126e4eff0_0;
    %pad/u 4;
    %ix/vec4 4;
    %load/vec4a v0x126e4eb10, 4;
    %load/vec4 v0x126e4f280_0;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_4.0;
    %store/vec4 v0x126e4ecf0_0, 0, 1;
    %load/vec4 v0x126e4ecf0_0;
    %inv;
    %store/vec4 v0x126e4ed90_0, 0, 1;
    %load/vec4 v0x126e4ecf0_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_4.3, 9;
    %load/vec4 v0x126e4f4d0_0;
    %nor/r;
    %and;
T_4.3;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.1, 8;
    %load/vec4 v0x126e4eff0_0;
    %pad/u 10;
    %pad/u 15;
    %muli 32, 0, 15;
    %pad/u 16;
    %load/vec4 v0x126e4e1b0_0;
    %pad/u 7;
    %pad/u 16;
    %add;
    %ix/vec4 4;
    %load/vec4a v0x126e4e260, 4;
    %store/vec4 v0x126e4ee30_0, 0, 8;
    %jmp T_4.2;
T_4.1 ;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x126e4ee30_0, 0, 8;
T_4.2 ;
    %jmp T_4;
    .thread T_4, $push;
    .scope S_0x126e4d5e0;
T_5 ;
    %wait E_0x126e4da20;
    %load/vec4 v0x126e4f1e0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.0, 8;
    %fork t_1, S_0x126e4dee0;
    %jmp t_0;
    .scope S_0x126e4dee0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e4e050_0, 0, 32;
T_5.2 ;
    %load/vec4 v0x126e4e050_0;
    %pad/s 64;
    %cmpi/s 4, 0, 64;
    %jmp/0xz T_5.3, 5;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 3, v0x126e4e050_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x126e4f330, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e4e050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x126e4e050_0, 0, 32;
    %jmp T_5.2;
T_5.3 ;
    %end;
    .scope S_0x126e4d5e0;
t_0 %join;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x126e4eee0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x126e4f090_0, 0;
    %pushi/vec4 0, 0, 8;
    %assign/vec4 v0x126e4f130_0, 0;
    %jmp T_5.1;
T_5.0 ;
    %load/vec4 v0x126e4ecf0_0;
    %assign/vec4 v0x126e4eee0_0, 0;
    %load/vec4 v0x126e4ed90_0;
    %assign/vec4 v0x126e4f090_0, 0;
    %load/vec4 v0x126e4ee30_0;
    %assign/vec4 v0x126e4f130_0, 0;
    %load/vec4 v0x126e4ed90_0;
    %flag_set/vec4 8;
    %jmp/1 T_5.6, 8;
    %load/vec4 v0x126e4f4d0_0;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_5.6;
    %jmp/0xz  T_5.4, 8;
    %pushi/vec4 1, 0, 1;
    %load/vec4 v0x126e4eff0_0;
    %pad/u 4;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x126e4f330, 0, 4;
    %load/vec4 v0x126e4f280_0;
    %load/vec4 v0x126e4eff0_0;
    %pad/u 4;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x126e4eb10, 0, 4;
    %load/vec4 v0x126e4f4d0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.7, 8;
    %load/vec4 v0x126e4f420_0;
    %load/vec4 v0x126e4eff0_0;
    %pad/u 10;
    %pad/u 15;
    %muli 32, 0, 15;
    %pad/u 16;
    %load/vec4 v0x126e4e1b0_0;
    %pad/u 7;
    %pad/u 16;
    %add;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x126e4e260, 0, 4;
T_5.7 ;
T_5.4 ;
T_5.1 ;
    %jmp T_5;
    .thread T_5;
    .scope S_0x126e0f710;
T_6 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e504a0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e4ffc0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e50050_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e506a0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e50730_0, 0, 32;
    %end;
    .thread T_6, $init;
    .scope S_0x126e0f710;
T_7 ;
    %vpi_call/w 3 26 "$display", "Simulation Parameters:" {0 0 0};
    %vpi_call/w 3 27 "$display", "CACHE_SIZE = %0d", P_0x126e072c0 {0 0 0};
    %vpi_call/w 3 28 "$display", "BLOCK_SIZE = %0d", P_0x126e07280 {0 0 0};
    %vpi_call/w 3 29 "$display", "ASSOC = %0d", P_0x126e07200 {0 0 0};
    %vpi_call/w 3 30 "$display", "NUM_SETS = %0d", P_0x126e07340 {0 0 0};
    %vpi_call/w 3 31 "$display", "BLOCK_OFFSET_WIDTH = %0d", P_0x126e07240 {0 0 0};
    %vpi_call/w 3 32 "$display", "INDEX_WIDTH = %0d", P_0x126e07300 {0 0 0};
    %vpi_call/w 3 33 "$display", "TAG_WIDTH = %0d", P_0x126e073c0 {0 0 0};
    %end;
    .thread T_7;
    .scope S_0x126e0f710;
T_8 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x126e4fcc0_0, 0, 1;
T_8.0 ;
    %delay 5, 0;
    %load/vec4 v0x126e4fcc0_0;
    %inv;
    %store/vec4 v0x126e4fcc0_0, 0, 1;
    %jmp T_8.0;
    %end;
    .thread T_8;
    .scope S_0x126e0f710;
T_9 ;
    %vpi_call/w 3 122 "$display", "--- Resetting Cache ---" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x126e500e0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x126e50610_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e4fc10_0, 0, 32;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x126e50550_0, 0, 8;
    %delay 50, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x126e500e0_0, 0, 1;
    %delay 10, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e50190_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e502a0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e50340_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e503f0_0, 0, 32;
    %vpi_call/w 3 138 "$display", "--- Basic Test 1: Initial Write ---" {0 0 0};
    %pushi/vec4 4096, 0, 32;
    %store/vec4 v0x126e4fb70_0, 0, 32;
    %pushi/vec4 170, 0, 8;
    %store/vec4 v0x126e4fab0_0, 0, 8;
    %fork TD_direct_mapped_cache_tb.write_access, S_0x126e4f8f0;
    %join;
    %vpi_call/w 3 141 "$display", "--- Basic Test 2: Read After Write ---" {0 0 0};
    %pushi/vec4 4096, 0, 32;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 145 "$display", "--- Basic Test 3: Conflict Write ---" {0 0 0};
    %pushi/vec4 8192, 0, 32;
    %store/vec4 v0x126e4fb70_0, 0, 32;
    %pushi/vec4 187, 0, 8;
    %store/vec4 v0x126e4fab0_0, 0, 8;
    %fork TD_direct_mapped_cache_tb.write_access, S_0x126e4f8f0;
    %join;
    %vpi_call/w 3 148 "$display", "--- Basic Test 4: Read Original Address After Conflict ---" {0 0 0};
    %pushi/vec4 4096, 0, 32;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 152 "$display", "--- Basic Test 5: Read Conflict Address ---" {0 0 0};
    %pushi/vec4 8192, 0, 32;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 156 "$display", "--- Basic Test 6: Write to a Different Set ---" {0 0 0};
    %pushi/vec4 12288, 0, 32;
    %store/vec4 v0x126e4fb70_0, 0, 32;
    %pushi/vec4 204, 0, 8;
    %store/vec4 v0x126e4fab0_0, 0, 8;
    %fork TD_direct_mapped_cache_tb.write_access, S_0x126e4f8f0;
    %join;
    %vpi_call/w 3 159 "$display", "--- Basic Test 7: Read from New Set ---" {0 0 0};
    %pushi/vec4 12288, 0, 32;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 164 "$display", "--- Test 8: Sequential Read Access ---" {0 0 0};
    %fork t_3, S_0x126e3e6f0;
    %jmp t_2;
    .scope S_0x126e3e6f0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e10340_0, 0, 32;
T_9.0 ;
    %load/vec4 v0x126e10340_0;
    %pad/s 64;
    %cmpi/s 256, 0, 64;
    %jmp/0xz T_9.1, 5;
    %pushi/vec4 65536, 0, 32;
    %load/vec4 v0x126e10340_0;
    %add;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %load/vec4 v0x126e10340_0;
    %addi 32, 0, 32;
    %cast2;
    %store/vec4 v0x126e10340_0, 0, 32;
    %jmp T_9.0;
T_9.1 ;
    %end;
    .scope S_0x126e0f710;
t_2 %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 170 "$display", "--- Test 9: Strided Read Access (Stride = Block Size) ---" {0 0 0};
    %fork t_5, S_0x126e4c4f0;
    %jmp t_4;
    .scope S_0x126e4c4f0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e4c6c0_0, 0, 32;
T_9.2 ;
    %load/vec4 v0x126e4c6c0_0;
    %pad/s 64;
    %cmpi/s 128, 0, 64;
    %jmp/0xz T_9.3, 5;
    %pushi/vec4 131072, 0, 32;
    %load/vec4 v0x126e4c6c0_0;
    %add;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %load/vec4 v0x126e4c6c0_0;
    %addi 32, 0, 32;
    %cast2;
    %store/vec4 v0x126e4c6c0_0, 0, 32;
    %jmp T_9.2;
T_9.3 ;
    %end;
    .scope S_0x126e0f710;
t_4 %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 176 "$display", "--- Test 10: Strided Read Access (Stride < Block Size) ---" {0 0 0};
    %fork t_7, S_0x126e4c750;
    %jmp t_6;
    .scope S_0x126e4c750;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e4c930_0, 0, 32;
T_9.4 ;
    %load/vec4 v0x126e4c930_0;
    %pad/s 64;
    %cmpi/s 128, 0, 64;
    %jmp/0xz T_9.5, 5;
    %pushi/vec4 196608, 0, 32;
    %load/vec4 v0x126e4c930_0;
    %add;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %load/vec4 v0x126e4c930_0;
    %addi 8, 0, 32;
    %cast2;
    %store/vec4 v0x126e4c930_0, 0, 32;
    %jmp T_9.4;
T_9.5 ;
    %end;
    .scope S_0x126e0f710;
t_6 %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 182 "$display", "--- Test 11: Sequential Write Access ---" {0 0 0};
    %fork t_9, S_0x126e4c9e0;
    %jmp t_8;
    .scope S_0x126e4c9e0;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e4cba0_0, 0, 32;
T_9.6 ;
    %load/vec4 v0x126e4cba0_0;
    %pad/s 64;
    %cmpi/s 128, 0, 64;
    %jmp/0xz T_9.7, 5;
    %pushi/vec4 262144, 0, 32;
    %load/vec4 v0x126e4cba0_0;
    %add;
    %store/vec4 v0x126e4fb70_0, 0, 32;
    %pushi/vec4 238, 0, 8;
    %store/vec4 v0x126e4fab0_0, 0, 8;
    %fork TD_direct_mapped_cache_tb.write_access, S_0x126e4f8f0;
    %join;
    %load/vec4 v0x126e4cba0_0;
    %addi 32, 0, 32;
    %cast2;
    %store/vec4 v0x126e4cba0_0, 0, 32;
    %jmp T_9.6;
T_9.7 ;
    %end;
    .scope S_0x126e0f710;
t_8 %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 188 "$display", "--- Test 12: Read Back Sequential Writes ---" {0 0 0};
    %fork t_11, S_0x126e4cc60;
    %jmp t_10;
    .scope S_0x126e4cc60;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e4ce60_0, 0, 32;
T_9.8 ;
    %load/vec4 v0x126e4ce60_0;
    %pad/s 64;
    %cmpi/s 128, 0, 64;
    %jmp/0xz T_9.9, 5;
    %pushi/vec4 262144, 0, 32;
    %load/vec4 v0x126e4ce60_0;
    %add;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %load/vec4 v0x126e4ce60_0;
    %addi 32, 0, 32;
    %cast2;
    %store/vec4 v0x126e4ce60_0, 0, 32;
    %jmp T_9.8;
T_9.9 ;
    %end;
    .scope S_0x126e0f710;
t_10 %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 194 "$display", "--- Test 13: Accesses within the same set, different offsets ---" {0 0 0};
    %fork t_13, S_0x126e4cf20;
    %jmp t_12;
    .scope S_0x126e4cf20;
t_13 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e4d0e0_0, 0, 32;
T_9.10 ;
    %load/vec4 v0x126e4d0e0_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_9.11, 5;
    %pushi/vec4 327680, 0, 32;
    %load/vec4 v0x126e4d0e0_0;
    %add;
    %store/vec4 v0x126e4fb70_0, 0, 32;
    %pushi/vec4 240, 0, 32;
    %load/vec4 v0x126e4d0e0_0;
    %add;
    %pad/u 8;
    %store/vec4 v0x126e4fab0_0, 0, 8;
    %fork TD_direct_mapped_cache_tb.write_access, S_0x126e4f8f0;
    %join;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e4d0e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x126e4d0e0_0, 0, 32;
    %jmp T_9.10;
T_9.11 ;
    %end;
    .scope S_0x126e0f710;
t_12 %join;
    %fork t_15, S_0x126e4d1a0;
    %jmp t_14;
    .scope S_0x126e4d1a0;
t_15 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x126e4d360_0, 0, 32;
T_9.12 ;
    %load/vec4 v0x126e4d360_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_9.13, 5;
    %pushi/vec4 327680, 0, 32;
    %load/vec4 v0x126e4d360_0;
    %add;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x126e4d360_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x126e4d360_0, 0, 32;
    %jmp T_9.12;
T_9.13 ;
    %end;
    .scope S_0x126e0f710;
t_14 %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 203 "$display", "--- Test 14: Random Access ---" {0 0 0};
    %pushi/vec4 397876, 0, 32;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %pushi/vec4 480888, 0, 32;
    %store/vec4 v0x126e4fb70_0, 0, 32;
    %pushi/vec4 17, 0, 8;
    %store/vec4 v0x126e4fab0_0, 0, 8;
    %fork TD_direct_mapped_cache_tb.write_access, S_0x126e4f8f0;
    %join;
    %pushi/vec4 563900, 0, 32;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %pushi/vec4 480888, 0, 32;
    %store/vec4 v0x126e4f860_0, 0, 32;
    %fork TD_direct_mapped_cache_tb.read_access, S_0x126e4f6f0;
    %join;
    %fork TD_direct_mapped_cache_tb.display_test_results, S_0x126e4d420;
    %join;
    %vpi_call/w 3 211 "$display", "--- Simulation Complete ---" {0 0 0};
    %vpi_call/w 3 212 "$display", "Total Accesses: %0d", v0x126e504a0_0 {0 0 0};
    %vpi_call/w 3 213 "$display", "Total Read Hits: %0d", v0x126e4ffc0_0 {0 0 0};
    %vpi_call/w 3 214 "$display", "Total Read Misses: %0d", v0x126e50050_0 {0 0 0};
    %vpi_call/w 3 215 "$display", "Total Write Hits: %0d", v0x126e506a0_0 {0 0 0};
    %vpi_call/w 3 216 "$display", "Total Write Misses: %0d", v0x126e50730_0 {0 0 0};
    %vpi_call/w 3 218 "$finish" {0 0 0};
    %end;
    .thread T_9;
    .scope S_0x126e0f710;
T_10 ;
    %vpi_call/w 3 223 "$dumpfile", "direct_mapped_cache.vcd" {0 0 0};
    %vpi_call/w 3 224 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x126e0f710 {0 0 0};
    %end;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "testbenches/direct_mapped_cache_tb.sv";
    "caches/direct_mapped_cache.sv";
